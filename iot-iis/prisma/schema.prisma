generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql" //"mysql" for planetscale
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Parameter {
  name        String
  valuesFrom  Float
  valuesTo    Float
  precision   Int        @default(2)
  parameterId Int        @id @default(autoincrement())
  typeId      Int
  unit        String?
  deviceTypes DeviceType @relation(fields: [typeId], references: [typeId], onDelete: Cascade, onUpdate: Cascade)
  values      Value[]

  @@index([typeId])
}

model Value {
  valueId     Int       @id @default(autoincrement())
  recentValue Float     @default(0.0)
  deviceId    Int
  parameterId Int
  kpi         Kpi?
  device      Device    @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade, onUpdate: Cascade)
  parameter   Parameter @relation(fields: [parameterId], references: [parameterId], onDelete: Cascade, onUpdate: Cascade)

  @@index([parameterId])
  @@index([deviceId])
}

model Device {
  alias       String
  description String?
  deviceId    Int        @id @default(autoincrement())
  systemId    Int?
  username    String     @default("cultsauce")
  typeId      Int        @default(1)
  values      Value[]
  deviceType  DeviceType @relation(fields: [typeId], references: [typeId], onDelete: Restrict, onUpdate: Cascade)
  user        User       @relation("UserDevice", fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  system      System?    @relation(fields: [systemId], references: [systemId], onDelete: SetNull, onUpdate: Cascade)

  @@index([typeId])
  @@index([username])
  @@index([systemId])
}

model DeviceType {
  name       String
  username   String
  typeId     Int         @id @default(autoincrement())
  parameters Parameter[]
  devices    Device[]
  user       User        @relation("UserDevice", fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)

  @@index([username])
}

model Kpi {
  kpiId     Int    @id @default(autoincrement())
  relation  String
  threshold Float
  result    String
  valueId   Int    @unique
  value     Value  @relation(fields: [valueId], references: [valueId], onDelete: Cascade, onUpdate: Cascade)
}

model User {
  username        String       @id @unique
  password        String
  admin_flag      Int          @default(0)
  broker_flag     Int          @default(0)
  devices         Device[]     @relation("UserDevice")
  deviceTypes     DeviceType[] @relation("UserDevice")
  systems         System[]     @relation("created system")
  allowed_systems System[]     @relation("SystemUser")
}

model System {
  systemId      Int      @id @default(autoincrement())
  name          String
  description   String?
  username      String   @default("cultsauce")
  devices       Device[]
  user          User     @relation("created system", fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  allowed_users User[]   @relation("SystemUser")

  @@index([username])
}

model SystemUser {
  A Int
  B String

  @@unique([A, B], map: "_SystemUser_AB_unique")
  @@index([B], map: "_SystemUser_B_index")
  @@map("_SystemUser")
}
