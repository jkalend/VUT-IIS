generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Parameter {
  name        String     @id @unique
  valuesFrom  Float
  valuesTo    Float
  precision   Int        @default(2)
  type        String
  typeName    String
  deviceTypes DeviceType @relation(fields: [typeName], references: [name])

  @@index([typeName])
}

model DeviceType {
  name       String      @id @unique
  parameters Parameter[]
  devices    Device[]
  username   String
  user        User       @relation("UserDevice", fields: [username], references: [username])
}

model Device {
  deviceId    Int        @id @default(autoincrement())
  alias       String
  description String?
  recentValue Float      @default(0.0)
  systemId    Int?
  username    String     @default("cultsauce")
  typus       String
  deviceType  DeviceType @relation(fields: [typus], references: [name])
  user        User       @relation("UserDevice", fields: [username], references: [username])
  system      System?    @relation(fields: [systemId], references: [systemId])

  @@index([typus])
  @@index([username])
  @@index([systemId])
}

model Kpi {
  kpiId     Int    @id @default(autoincrement())
  relation  String
  threshold Float
  result    String
  deviceId  Int

  @@index([deviceId])
}

model User {
  username     String   @id @unique
  password     String
  admin_flag      Int   @default(0)
  devices      Device[] @relation("UserDevice")
  deviceTypes  DeviceType[] @relation("UserDevice")
  systems      System[]
}

model System {
  systemId    Int      @id @default(autoincrement())
  name        String
  description String?
  username    String    @default("cultsauce")
  devices     Device[]
  users       User     @relation(fields: [username], references: [username])
}

