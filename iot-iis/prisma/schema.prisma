generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Parameter {
  name        String     @id @unique
  valuesFrom  Float
  valuesTo    Float
  precision   Int        @default(2)
  typeName    String
  deviceTypes DeviceType @relation(fields: [typeName], references: [name])

  @@index([typeName])
}

model DeviceType {
  name       String      @id @unique
  parameters Parameter[]
  devices    Device[]
}

model Device {
  alias       String
  description String?
  deviceId    Int        @id @default(autoincrement())
  recentValue Float      @default(0.0)
  systemId    Int?
  typus       String
  username    String     @default("cultsauce")
  deviceType  DeviceType @relation(fields: [typus], references: [name])
  user        User       @relation("UserDevice", fields: [userId], references: [userId])
  system      System?    @relation(fields: [systemId], references: [systemId])
  broker      User       @relation("Broker", fields: [brokerId], references: [userId])

  @@index([typus])
  @@index([systemId])
  @@index([username])
}

model Kpi {
  kpiId     Int    @id @default(autoincrement())
  relation  String
  threshold Float
  result    String
  deviceId  Int

  @@index([deviceId])
}

model User {
  username     String   @id @unique
  password     String
  admin_flag   Int      @default(0)
  devices      Device[] @relation("UserDevice")
  systems      System[]
  device       Device[] @relation("Broker")
  managedUsers User[]   @relation("Admin")
}

model System {
  systemId    Int      @id @default(autoincrement())
  name        String
  description String?
  username    String   @default("cultsauce")
  devices     Device[]
  users       User     @relation(fields: [userId], references: [userId])
}
